-- Database: store

-- DROP DATABASE store;

CREATE DATABASE store
    WITH 
    OWNER = postgres
    ENCODING = 'UTF8'
    LC_COLLATE = 'Russian_Russia.1251'
    LC_CTYPE = 'Russian_Russia.1251'
    TABLESPACE = pg_default
    CONNECTION LIMIT = -1;
	
-- #100DaysOfCode: DAY 3
-- How to use the count function

SELECT COUNT(*) FROM employees;

SELECT * FROM products;

SELECT COUNT(*) FROM products
WHERE season = 'Summer';

SELECT COUNT(season) FROM products
WHERE season = 'Summer';

-- find out the number of orders in January.
SELECT COUNT(*) FROM orders
WHERE order_date BETWEEN '20170101' AND '20170131';

-- MIN AND MAX VALUES 
SELECT * FROM products;
SELECT MIN(wholesale_price) AS cheapest_product FROM products;
SELECT MAX(quantity) AS biggest_order FROM orders;

-- USING the SUM function

SELECT * FROM orders;
SELECT * FROM employees;

SELECT SUM(hours) FROM employees;

SELECT SUM(quantity) FROM orders
WHERE order_date BETWEEN '20170101' AND '20170131';

/* 
SELECT SUM(first_name) FROM employees;
Doesn't work because there are no arguments
*/

-- USING the AVERAGE function

SELECT AVG(pay) FROM employees;

SELECT AVG(price) FROM orders
WHERE quantity>1;

-- #100DaysOfCode: DAY 4
-- Grouping DATA by using GROUP BY

SELECT * FROM orders;

SELECT customer_id, SUM(price) FROM orders
GROUP BY customer_id;


SELECT * FROM orders WHERE customer_id = 3;

SELECT customer_id, product_id, SUM(price) FROM orders
GROUP BY customer_id, product_id
ORDER BY product_id;

SELECT c.first_name, c.last_name, p.name, SUM(o.price) FROM customers c
JOIN orders o ON c.id = o.customer_id
JOIN products p ON o.product_id = p.id
GROUP BY c.last_name, c.first_name, p.name
ORDER BY c.last_name;

-- Using the HAVING clause 

SELECT customer_id, SUM(price) FROM orders
GROUP BY customer_id
HAVING customer_id = 8;

SELECT c.first_name, c.last_name, p.name, SUM(o.price) FROM customers c
JOIN orders o ON c.id = o.customer_id
JOIN products p ON o.product_id = p.id
GROUP BY c.last_name, c.first_name, p.name
HAVING p.name LIKE '%Shirt%'
ORDER BY c.last_name;

SELECT date_joined, id FROM customers 
WHERE date_joined BETWEEN '20160501' AND '20161231';


SELECT date_joined, COUNT(id) FROM customers
GROUP BY date_joined 
HAVING date_joined BETWEEN '20160101' AND '20161231';

-- 1. Write a query which will return the maximum value in the hours column from the employees table. 

SELECT MAX(hours) FROM employees;

--2. Write a query which will return the number of rows in the address table where city is equal to London. 
SELECT COUNT(id) FROM address
WHERE city ='London';

--3. What was the total quantity bought in January 2017, grouped by each product and order date?
SELECT product_id, order_date, SUM(quantity) FROM orders
GROUP BY product_id, order_date 
HAVING order_date BETWEEN '20170101' AND '20170131'
ORDER BY order_date;

--4. What was the average price spent, grouped by each order date, for March 2017? 
SELECT order_date, AVG(price) FROM orders
GROUP BY order_date, price
HAVING order_date BETWEEN '20170301' AND '20170331';

SELECT order_date, AVG(price) FROM orders
GROUP BY order_date 
HAVING order_date BETWEEN '20170301' AND '20170331'
ORDER BY order_date;